// Generated by Dagger (https://dagger.dev).
package ir.barook.todonote.ui.todo.tasks;

import androidx.lifecycle.SavedStateHandle;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ir.barook.todonote.data.PreferencesManager;
import ir.barook.todonote.data.TaskDao;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TasksViewModel_Factory implements Factory<TasksViewModel> {
  private final Provider<TaskDao> taskDaoProvider;

  private final Provider<PreferencesManager> preferecesManagerProvider;

  private final Provider<SavedStateHandle> stateProvider;

  public TasksViewModel_Factory(Provider<TaskDao> taskDaoProvider,
      Provider<PreferencesManager> preferecesManagerProvider,
      Provider<SavedStateHandle> stateProvider) {
    this.taskDaoProvider = taskDaoProvider;
    this.preferecesManagerProvider = preferecesManagerProvider;
    this.stateProvider = stateProvider;
  }

  @Override
  public TasksViewModel get() {
    return newInstance(taskDaoProvider.get(), preferecesManagerProvider.get(), stateProvider.get());
  }

  public static TasksViewModel_Factory create(Provider<TaskDao> taskDaoProvider,
      Provider<PreferencesManager> preferecesManagerProvider,
      Provider<SavedStateHandle> stateProvider) {
    return new TasksViewModel_Factory(taskDaoProvider, preferecesManagerProvider, stateProvider);
  }

  public static TasksViewModel newInstance(TaskDao taskDao, PreferencesManager preferecesManager,
      SavedStateHandle state) {
    return new TasksViewModel(taskDao, preferecesManager, state);
  }
}
