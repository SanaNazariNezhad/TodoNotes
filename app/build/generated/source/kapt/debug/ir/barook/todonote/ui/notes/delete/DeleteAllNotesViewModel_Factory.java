// Generated by Dagger (https://dagger.dev).
package ir.barook.todonote.ui.notes.delete;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ir.barook.todonote.data.NoteDao;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@ScopeMetadata
@QualifierMetadata("ir.barook.todonote.di.ApplicationScope")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteAllNotesViewModel_Factory implements Factory<DeleteAllNotesViewModel> {
  private final Provider<NoteDao> daoProvider;

  private final Provider<CoroutineScope> applicationScopeProvider;

  public DeleteAllNotesViewModel_Factory(Provider<NoteDao> daoProvider,
      Provider<CoroutineScope> applicationScopeProvider) {
    this.daoProvider = daoProvider;
    this.applicationScopeProvider = applicationScopeProvider;
  }

  @Override
  public DeleteAllNotesViewModel get() {
    return newInstance(daoProvider.get(), applicationScopeProvider.get());
  }

  public static DeleteAllNotesViewModel_Factory create(Provider<NoteDao> daoProvider,
      Provider<CoroutineScope> applicationScopeProvider) {
    return new DeleteAllNotesViewModel_Factory(daoProvider, applicationScopeProvider);
  }

  public static DeleteAllNotesViewModel newInstance(NoteDao dao, CoroutineScope applicationScope) {
    return new DeleteAllNotesViewModel(dao, applicationScope);
  }
}
