// Generated by Dagger (https://dagger.dev).
package ir.barook.todonote.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ir.barook.todonote.data.TaskDao;
import ir.barook.todonote.data.TaskDatabase;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesDaoFactory implements Factory<TaskDao> {
  private final Provider<TaskDatabase> dbProvider;

  public AppModule_ProvidesDaoFactory(Provider<TaskDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public TaskDao get() {
    return providesDao(dbProvider.get());
  }

  public static AppModule_ProvidesDaoFactory create(Provider<TaskDatabase> dbProvider) {
    return new AppModule_ProvidesDaoFactory(dbProvider);
  }

  public static TaskDao providesDao(TaskDatabase db) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesDao(db));
  }
}
